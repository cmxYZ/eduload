{"ast":null,"code":"import { AgGridVue } from \"ag-grid-vue3\"; // the AG Grid Vue Component\nimport { reactive, onMounted, ref } from \"vue\";\nimport \"ag-grid-community/styles/ag-grid.css\"; // Core grid CSS, always needed\nimport \"ag-grid-community/styles/ag-theme-alpine.css\"; // Optional theme CSS\n\nexport default {\n  name: \"App\",\n  components: {\n    'ag-grid-vue': AgGridVue\n  },\n  data: function () {\n    return {\n      columnDefs: [{\n        field: 'athlete'\n      }, {\n        field: 'age',\n        filter: 'agNumberColumnFilter',\n        maxWidth: 100\n      }, {\n        field: 'date',\n        filter: 'agDateColumnFilter',\n        filterParams: filterParams\n      }, {\n        field: 'country',\n        filter: 'agSetColumnFilter'\n      }, {\n        field: 'sport',\n        filter: 'agMultiColumnFilter'\n      }, {\n        field: 'gold',\n        filter: 'agNumberColumnFilter'\n      }, {\n        field: 'silver',\n        filter: 'agNumberColumnFilter'\n      }, {\n        field: 'bronze',\n        filter: 'agNumberColumnFilter'\n      }, {\n        field: 'total',\n        filter: false\n      }],\n      gridApi: null,\n      columnApi: null,\n      defaultColDef: {\n        flex: 1,\n        minWidth: 150,\n        filter: 'agTextColumnFilter',\n        menuTabs: ['filterMenuTab']\n      },\n      rowData: null\n    };\n  },\n  created() {},\n  methods: {\n    onGridReady(params) {\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n      const updateData = data => params.api.setRowData(data);\n      fetch('https://www.ag-grid.com/example-assets/olympic-winners.json').then(resp => resp.json()).then(data => updateData(data));\n    }\n  }\n};","map":{"version":3,"names":["AgGridVue","reactive","onMounted","ref","name","components","data","columnDefs","field","filter","maxWidth","filterParams","gridApi","columnApi","defaultColDef","flex","minWidth","menuTabs","rowData","created","methods","onGridReady","params","api","gridColumnApi","updateData","setRowData","fetch","then","resp","json"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\components\\AGGrid.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100%\">\r\n    <ag-grid-vue\r\n\r\n        style=\"width: 100%; height: 100%;\"\r\n        class=\"ag-theme-alpine\"\r\n        :columnDefs=\"columnDefs\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowData=\"rowData\"></ag-grid-vue>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from \"ag-grid-vue3\";  // the AG Grid Vue Component\r\nimport { reactive, onMounted, ref } from \"vue\";\r\n\r\nimport \"ag-grid-community/styles/ag-grid.css\"; // Core grid CSS, always needed\r\nimport \"ag-grid-community/styles/ag-theme-alpine.css\"; // Optional theme CSS\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    'ag-grid-vue': AgGridVue,\r\n  },\r\n  data: function () {\r\n    return {\r\n      columnDefs: [\r\n        {field: 'athlete'},\r\n        {field: 'age', filter: 'agNumberColumnFilter', maxWidth: 100},\r\n        {\r\n          field: 'date',\r\n          filter: 'agDateColumnFilter',\r\n          filterParams: filterParams,\r\n        },\r\n        {field: 'country', filter: 'agSetColumnFilter'},\r\n        {field: 'sport', filter: 'agMultiColumnFilter'},\r\n        {field: 'gold', filter: 'agNumberColumnFilter'},\r\n        {field: 'silver', filter: 'agNumberColumnFilter'},\r\n        {field: 'bronze', filter: 'agNumberColumnFilter'},\r\n        {field: 'total', filter: false},\r\n      ],\r\n      gridApi: null,\r\n      columnApi: null,\r\n      defaultColDef: {\r\n        flex: 1,\r\n        minWidth: 150,\r\n        filter: 'agTextColumnFilter',\r\n        menuTabs: ['filterMenuTab'],\r\n      },\r\n      rowData: null,\r\n    };\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    onGridReady(params) {\r\n      this.gridApi = params.api;\r\n      this.gridColumnApi = params.columnApi;\r\n\r\n      const updateData = (data) => params.api.setRowData(data);\r\n\r\n      fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\r\n          .then((resp) => resp.json())\r\n          .then((data) => updateData(data));\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\"></style>"],"mappings":"AAcA,SAASA,SAAQ,QAAS,cAAc,EAAG;AAC3C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAE9C,OAAO,sCAAsC,EAAE;AAC/C,OAAO,8CAA8C,EAAE;;AAEvD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACV,aAAa,EAAEL;EACjB,CAAC;EACDM,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAO;MACLC,UAAU,EAAE,CACV;QAACC,KAAK,EAAE;MAAS,CAAC,EAClB;QAACA,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE,sBAAsB;QAAEC,QAAQ,EAAE;MAAG,CAAC,EAC7D;QACEF,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,oBAAoB;QAC5BE,YAAY,EAAEA;MAChB,CAAC,EACD;QAACH,KAAK,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAmB,CAAC,EAC/C;QAACD,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAqB,CAAC,EAC/C;QAACD,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAsB,CAAC,EAC/C;QAACD,KAAK,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAsB,CAAC,EACjD;QAACD,KAAK,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAsB,CAAC,EACjD;QAACD,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAK,CAAC,CAChC;MACDG,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE;QACbC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE,GAAG;QACbP,MAAM,EAAE,oBAAoB;QAC5BQ,QAAQ,EAAE,CAAC,eAAe;MAC5B,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG,CACV,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,MAAM,EAAE;MAClB,IAAI,CAACV,OAAM,GAAIU,MAAM,CAACC,GAAG;MACzB,IAAI,CAACC,aAAY,GAAIF,MAAM,CAACT,SAAS;MAErC,MAAMY,UAAS,GAAKnB,IAAI,IAAKgB,MAAM,CAACC,GAAG,CAACG,UAAU,CAACpB,IAAI,CAAC;MAExDqB,KAAK,CAAC,6DAA6D,EAC9DC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,EAC1BF,IAAI,CAAEtB,IAAI,IAAKmB,UAAU,CAACnB,IAAI,CAAC,CAAC;IACvC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}