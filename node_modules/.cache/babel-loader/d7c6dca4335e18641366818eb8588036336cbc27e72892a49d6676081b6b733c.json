{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"100%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ag_grid_vue, {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    class: \"ag-theme-alpine\",\n    columnDefs: _ctx.columnDefs,\n    onGridReady: $options.onGridReady,\n    defaultColDef: _ctx.defaultColDef,\n    rowData: _ctx.rowData\n  }, null, 8 /* PROPS */, [\"columnDefs\", \"onGridReady\", \"defaultColDef\", \"rowData\"])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createVNode","_component_ag_grid_vue","class","columnDefs","_ctx","onGridReady","$options","defaultColDef","rowData"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\components\\AGGrid.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100%\">\r\n    <ag-grid-vue\r\n\r\n        style=\"width: 100%; height: 100%;\"\r\n        class=\"ag-theme-alpine\"\r\n        :columnDefs=\"columnDefs\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowData=\"rowData\"></ag-grid-vue>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from \"ag-grid-vue3\";  // the AG Grid Vue Component\r\nimport { reactive, onMounted, ref } from \"vue\";\r\n\r\nimport \"ag-grid-community/styles/ag-grid.css\"; // Core grid CSS, always needed\r\nimport \"ag-grid-community/styles/ag-theme-alpine.css\"; // Optional theme CSS\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    'ag-grid-vue': AgGridVue,\r\n  },\r\n  data: function () {\r\n    return {\r\n      columnDefs: [\r\n        {field: 'athlete'},\r\n        {field: 'age', filter: 'agNumberColumnFilter', maxWidth: 100},\r\n        {\r\n          field: 'date',\r\n          filter: 'agDateColumnFilter',\r\n          filterParams: filterParams,\r\n        },\r\n        {field: 'country', filter: 'agSetColumnFilter'},\r\n        {field: 'sport', filter: 'agMultiColumnFilter'},\r\n        {field: 'gold', filter: 'agNumberColumnFilter'},\r\n        {field: 'silver', filter: 'agNumberColumnFilter'},\r\n        {field: 'bronze', filter: 'agNumberColumnFilter'},\r\n        {field: 'total', filter: false},\r\n      ],\r\n      gridApi: null,\r\n      columnApi: null,\r\n      defaultColDef: {\r\n        flex: 1,\r\n        minWidth: 150,\r\n        filter: 'agTextColumnFilter',\r\n        menuTabs: ['filterMenuTab'],\r\n      },\r\n      rowData: null,\r\n    };\r\n  },\r\n  created() {\r\n  },\r\n  methods: {\r\n    onGridReady(params) {\r\n      this.gridApi = params.api;\r\n      this.gridColumnApi = params.columnApi;\r\n\r\n      const updateData = (data) => params.api.setRowData(data);\r\n\r\n      fetch('https://www.ag-grid.com/example-assets/olympic-winners.json')\r\n          .then((resp) => resp.json())\r\n          .then((data) => updateData(data));\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\"></style>"],"mappings":";;EACOA,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;uBAAzBC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOqCC,sBAAA;IALjCJ,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IAClCK,KAAK,EAAC,iBAAiB;IACtBC,UAAU,EAAEC,IAAA,CAAAD,UAAU;IACtBE,WAAU,EAAEC,QAAA,CAAAD,WAAW;IACvBE,aAAa,EAAEH,IAAA,CAAAG,aAAa;IAC5BC,OAAO,EAAEJ,IAAA,CAAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}