{"ast":null,"code":"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport Vue from \"vue\";\nimport VueLogger from \"vuejs-logger\";\nimport Keycloak from \"keycloak-js\";\nVue.config.productionTip = false;\nVue.use(VueLogger);\n\n// createApp(App).mount(\"#app\");\n\nlet initOptions = {\n  url: \"https://keys.urfu.ru/auth/\",\n  realm: \"urfu-lk\",\n  clientId: \"rtf-eduload\",\n  public_key: \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\n  \"token-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\n  \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\n  \"tokens-not-before\": 0,\n  onLoad: \"check-sso\"\n};\nlet keycloak = Keycloak(initOptions);\nkeycloak.init({\n  onLoad: initOptions.onLoad\n}).then(auth => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    Vue.$log.info(\"Authenticated\");\n    new Vue({\n      el: '#app',\n      render: h => h(App, {\n        props: {\n          keycloak: keycloak\n        }\n      })\n    });\n  }\n\n  // //Token Refresh\n  //   setInterval(() => {\n  //     keycloak.updateToken(70).then((refreshed) => {\n  //       if (refreshed) {\n  //         Vue.$log.info('Token refreshed' + refreshed);\n  //       } else {\n  //         Vue.$log.warn('Token not refreshed, valid for '\n  //           + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n  //       }\n  //     }).catch(() => {\n  //       Vue.$log.error('Failed to refresh token');\n  //     });\n  //   }, 6000)\n}).catch(() => {\n  Vue.$log.error(\"Authenticated Failed\");\n});","map":{"version":3,"names":["createApp","App","Vue","VueLogger","Keycloak","config","productionTip","use","initOptions","url","realm","clientId","public_key","onLoad","keycloak","init","then","auth","window","location","reload","$log","info","el","render","h","props","catch","error"],"sources":["D:/Diploma/domains/eduload.vue/src/main.js"],"sourcesContent":["import { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport Vue from \"vue\";\r\nimport VueLogger from \"vuejs-logger\";\r\nimport Keycloak from \"keycloak-js\";\r\n\r\nVue.config.productionTip = false;\r\nVue.use(VueLogger);\r\n\r\n\r\n// createApp(App).mount(\"#app\");\r\n\r\nlet initOptions = {\r\n  url: \"https://keys.urfu.ru/auth/\",\r\n  realm: \"urfu-lk\",\r\n  clientId: \"rtf-eduload\",\r\n  public_key:\r\n    \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\r\n  \"token-service\":\r\n    \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\r\n  \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\r\n  \"tokens-not-before\": 0,\r\n  onLoad: \"check-sso\",\r\n};\r\n\r\nlet keycloak = Keycloak(initOptions);\r\n\r\nkeycloak.init({ onLoad: initOptions.onLoad }).then((auth) => {\r\n  if (!auth) {\r\n    window.location.reload();\r\n  } else {\r\n    Vue.$log.info(\"Authenticated\");\r\n\r\n    new Vue({\r\n      el: '#app',\r\n      render: h => h(App, { props: { keycloak: keycloak } })\r\n    })\r\n  }\r\n\r\n\r\n// //Token Refresh\r\n//   setInterval(() => {\r\n//     keycloak.updateToken(70).then((refreshed) => {\r\n//       if (refreshed) {\r\n//         Vue.$log.info('Token refreshed' + refreshed);\r\n//       } else {\r\n//         Vue.$log.warn('Token not refreshed, valid for '\r\n//           + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\r\n//       }\r\n//     }).catch(() => {\r\n//       Vue.$log.error('Failed to refresh token');\r\n//     });\r\n//   }, 6000)\r\n\r\n}).catch(() => {\r\n  Vue.$log.error(\"Authenticated Failed\");\r\n});\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,QAAQ,MAAM,aAAa;AAElCF,GAAG,CAACG,MAAM,CAACC,aAAa,GAAG,KAAK;AAChCJ,GAAG,CAACK,GAAG,CAACJ,SAAS,CAAC;;AAGlB;;AAEA,IAAIK,WAAW,GAAG;EAChBC,GAAG,EAAE,4BAA4B;EACjCC,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,aAAa;EACvBC,UAAU,EACR,0YAA0Y;EAC5Y,eAAe,EACb,kEAAkE;EACpE,iBAAiB,EAAE,kDAAkD;EACrE,mBAAmB,EAAE,CAAC;EACtBC,MAAM,EAAE;AACV,CAAC;AAED,IAAIC,QAAQ,GAAGV,QAAQ,CAACI,WAAW,CAAC;AAEpCM,QAAQ,CAACC,IAAI,CAAC;EAAEF,MAAM,EAAEL,WAAW,CAACK;AAAO,CAAC,CAAC,CAACG,IAAI,CAAEC,IAAI,IAAK;EAC3D,IAAI,CAACA,IAAI,EAAE;IACTC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC,MAAM;IACLlB,GAAG,CAACmB,IAAI,CAACC,IAAI,CAAC,eAAe,CAAC;IAE9B,IAAIpB,GAAG,CAAC;MACNqB,EAAE,EAAE,MAAM;MACVC,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACxB,GAAG,EAAE;QAAEyB,KAAK,EAAE;UAAEZ,QAAQ,EAAEA;QAAS;MAAE,CAAC;IACvD,CAAC,CAAC;EACJ;;EAGF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEA,CAAC,CAAC,CAACa,KAAK,CAAC,MAAM;EACbzB,GAAG,CAACmB,IAAI,CAACO,KAAK,CAAC,sBAAsB,CAAC;AACxC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}