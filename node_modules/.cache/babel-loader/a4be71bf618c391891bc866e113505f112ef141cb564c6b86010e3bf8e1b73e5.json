{"ast":null,"code":"import { createVNode, defineComponent, render } from 'vue';\nexport class VueComponentFactory {\n  static getComponentDefinition(component, parent) {\n    let componentDefinition;\n    // when referencing components by name - ie: cellRenderer: 'MyComponent'\n    if (typeof component === 'string') {\n      // look up the definition in Vue\n      componentDefinition = this.searchForComponentInstance(parent, component);\n    } else {\n      componentDefinition = {\n        extends: defineComponent(Object.assign({}, component))\n      };\n    }\n    if (!componentDefinition) {\n      console.error(`Could not find component with name of ${component}. Is it in Vue.components?`);\n    }\n    if (componentDefinition.extends) {\n      if (componentDefinition.extends.setup) {\n        componentDefinition.setup = componentDefinition.extends.setup;\n      }\n      componentDefinition.extends.props = this.addParamsToProps(componentDefinition.extends.props);\n    } else {\n      componentDefinition.props = this.addParamsToProps(componentDefinition.props);\n    }\n    return componentDefinition;\n  }\n  static addParamsToProps(props) {\n    if (!props || Array.isArray(props) && props.indexOf('params') === -1) {\n      props = ['params', ...(props ? props : [])];\n    } else if (typeof props === 'object' && !props.params) {\n      /* tslint:disable:no-string-literal */\n      props['params'] = {\n        type: Object\n      };\n    }\n    return props;\n  }\n  static createAndMountComponent(component, params, parent, provides) {\n    const componentDefinition = VueComponentFactory.getComponentDefinition(component, parent);\n    if (!componentDefinition) {\n      return;\n    }\n    const {\n      vNode,\n      destroy,\n      el\n    } = this.mount(componentDefinition, {\n      params: Object.freeze(params)\n    }, parent, provides || {});\n    // note that the component creation is synchronous so that componentInstance is set by this point\n    return {\n      componentInstance: vNode.component.proxy,\n      element: el,\n      destroy\n    };\n  }\n  static mount(component, props, parent, provides) {\n    let vNode = createVNode(component, props);\n    vNode.appContext = parent.$.appContext;\n    vNode.appContext.provides = Object.assign(Object.assign(Object.assign({}, provides), vNode.appContext.provides ? vNode.appContext.provides : {}), parent.$parent.$options.provide ? parent.$parent.$options.provide : {});\n    let el = document.createElement('div');\n    render(vNode, el);\n    const destroy = () => {\n      if (el) {\n        render(null, el);\n      }\n      el = null;\n      vNode = null;\n    };\n    return {\n      vNode,\n      destroy,\n      el\n    };\n  }\n  static searchForComponentInstance(parent, component, maxDepth = 10, suppressError = false) {\n    let componentInstance = null;\n    let currentParent = parent.$parent;\n    let depth = 0;\n    while (!componentInstance && currentParent && currentParent.$options && ++depth < maxDepth) {\n      const currentParentAsThis = currentParent;\n      componentInstance = currentParentAsThis.$options && currentParentAsThis.$options.components ? currentParentAsThis.$options.components[component] : null;\n      currentParent = currentParent.$parent;\n    }\n    // then search in globally registered components of app\n    if (!componentInstance) {\n      const components = parent.$.appContext.components;\n      if (components && components[component]) {\n        componentInstance = components[component];\n      }\n    }\n    if (!componentInstance && !suppressError) {\n      console.error(`Could not find component with name of ${component}. Is it in Vue.components?`);\n      return null;\n    }\n    return componentInstance;\n  }\n}","map":{"version":3,"names":["createVNode","defineComponent","render","VueComponentFactory","getComponentDefinition","component","parent","componentDefinition","searchForComponentInstance","extends","Object","assign","console","error","setup","props","addParamsToProps","Array","isArray","indexOf","params","type","createAndMountComponent","provides","vNode","destroy","el","mount","freeze","componentInstance","proxy","element","appContext","$","$parent","$options","provide","document","createElement","maxDepth","suppressError","currentParent","depth","currentParentAsThis","components"],"sources":["D:/Diploma/domains/eduload.vue/node_modules/ag-grid-vue3/lib/VueComponentFactory.js"],"sourcesContent":["import { createVNode, defineComponent, render } from 'vue';\nexport class VueComponentFactory {\n    static getComponentDefinition(component, parent) {\n        let componentDefinition;\n        // when referencing components by name - ie: cellRenderer: 'MyComponent'\n        if (typeof component === 'string') {\n            // look up the definition in Vue\n            componentDefinition = this.searchForComponentInstance(parent, component);\n        }\n        else {\n            componentDefinition = { extends: defineComponent(Object.assign({}, component)) };\n        }\n        if (!componentDefinition) {\n            console.error(`Could not find component with name of ${component}. Is it in Vue.components?`);\n        }\n        if (componentDefinition.extends) {\n            if (componentDefinition.extends.setup) {\n                componentDefinition.setup = componentDefinition.extends.setup;\n            }\n            componentDefinition.extends.props = this.addParamsToProps(componentDefinition.extends.props);\n        }\n        else {\n            componentDefinition.props = this.addParamsToProps(componentDefinition.props);\n        }\n        return componentDefinition;\n    }\n    static addParamsToProps(props) {\n        if (!props || (Array.isArray(props) && props.indexOf('params') === -1)) {\n            props = ['params', ...(props ? props : [])];\n        }\n        else if (typeof props === 'object' && !props.params) {\n            /* tslint:disable:no-string-literal */\n            props['params'] = {\n                type: Object\n            };\n        }\n        return props;\n    }\n    static createAndMountComponent(component, params, parent, provides) {\n        const componentDefinition = VueComponentFactory.getComponentDefinition(component, parent);\n        if (!componentDefinition) {\n            return;\n        }\n        const { vNode, destroy, el } = this.mount(componentDefinition, { params: Object.freeze(params) }, parent, provides || {});\n        // note that the component creation is synchronous so that componentInstance is set by this point\n        return {\n            componentInstance: vNode.component.proxy,\n            element: el,\n            destroy,\n        };\n    }\n    static mount(component, props, parent, provides) {\n        let vNode = createVNode(component, props);\n        vNode.appContext = parent.$.appContext;\n        vNode.appContext.provides = Object.assign(Object.assign(Object.assign({}, provides), (vNode.appContext.provides ? vNode.appContext.provides : {})), (parent.$parent.$options.provide ? parent.$parent.$options.provide : {}));\n        let el = document.createElement('div');\n        render(vNode, el);\n        const destroy = () => {\n            if (el) {\n                render(null, el);\n            }\n            el = null;\n            vNode = null;\n        };\n        return { vNode, destroy, el };\n    }\n    static searchForComponentInstance(parent, component, maxDepth = 10, suppressError = false) {\n        let componentInstance = null;\n        let currentParent = parent.$parent;\n        let depth = 0;\n        while (!componentInstance &&\n            currentParent &&\n            currentParent.$options &&\n            (++depth < maxDepth)) {\n            const currentParentAsThis = currentParent;\n            componentInstance = currentParentAsThis.$options && currentParentAsThis.$options.components ? currentParentAsThis.$options.components[component] : null;\n            currentParent = currentParent.$parent;\n        }\n        // then search in globally registered components of app\n        if (!componentInstance) {\n            const components = parent.$.appContext.components;\n            if (components && components[component]) {\n                componentInstance = components[component];\n            }\n        }\n        if (!componentInstance && !suppressError) {\n            console.error(`Could not find component with name of ${component}. Is it in Vue.components?`);\n            return null;\n        }\n        return componentInstance;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}