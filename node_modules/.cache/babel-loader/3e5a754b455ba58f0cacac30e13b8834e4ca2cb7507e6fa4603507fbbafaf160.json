{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AGGrid = _resolveComponent(\"AGGrid\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_AGGrid, {\n    gridData: $data.gridData,\n    columnDefs: $data.columnDefs,\n    defaultColDef: $data.defaultColDef\n  }, null, 8 /* PROPS */, [\"gridData\", \"columnDefs\", \"defaultColDef\"])]), _createCommentVNode(\"v-if=\\\"!showSingIn\\\"\")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_AGGrid","gridData","$data","columnDefs","defaultColDef","_createCommentVNode"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"table\" ><AGGrid :gridData=\"gridData\" :columnDefs=\"columnDefs\" :defaultColDef=\"defaultColDef\"></AGGrid></div>\r\n<!--v-if=\"!showSingIn\"-->\r\n</template>\r\n\r\n<script>\r\nimport AGGrid from \"@/components/AGGrid.vue\";\r\n\r\nexport default {\r\n  mounted() {\r\n    this.fetchJson();\r\n  },\r\n  components: {\r\n    AGGrid,\r\n  },\r\n  data() {\r\n    return {\r\n      gridData: [],\r\n      columnDefs: [\r\n        { headerName: \"\", field: \"tkey\", cellRenderer: \"infoCellRenderer\", width: 100},\r\n        { headerName: \"ФИО\", field: \"name\", width: 280, filter: true, floatingFilter: true,},\r\n        { headerName: \"Должность/Место работы\", field: \"infoWorkPlaces\", width: 280, filter: true, floatingFilter: true,},\r\n        { headerName: \"Ставка\", field: \"stake\",  editable: true, width: 115},\r\n        { headerName: \"Часы на ставку\", field: \"hoursOnStake\", editable: true, width: 140},\r\n        { headerName: \"Кол-во часов на часовую оплату\", field: \"hours\", width: 160},\r\n        {\r\n          headerName: 'Бюджет',\r\n          children: [\r\n            { headerName: \"Планируемое кол-во часов\", field: \"bHoursPlaned\", width: 140},\r\n            { headerName: \"Фактическое кол-во часов\", field: \"bHoursReal\", editable: true, width: 140},\r\n            { headerName: \"Разница\", field: \"bHoursDiff\", width: 140},\r\n          ],\r\n        },\r\n        {\r\n          headerName: 'Контракт',\r\n          children: [\r\n            {headerName: \"Планируемое кол-во часов\", field: \"cHoursPlaned\", width: 140},\r\n            {headerName: \"Фактическое кол-во часов\", field: \"cHoursReal\", width: 140},\r\n            {headerName: \"Разница\", field: \"cHoursDiff\", width: 140},\r\n          ],\r\n        },\r\n        {\r\n          headerName: 'Общее',\r\n          children: [\r\n            {headerName: \"Планируемое кол-во часов\", field: \"hoursPlaned\", width: 140},\r\n            {headerName: \"Фактическое кол-во часов\", field: \"hoursReal\", width: 140},\r\n            {headerName: \"Разница\", field: \"hoursDiff\", width: 140},\r\n          ],\r\n        },\r\n        { headerName: \"Год\", field: \"year\", width: 140, filter: true, floatingFilter: true,},\r\n      ],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        spanHeaderHeight: true,\r\n        wrapHeaderText: true,\r\n        minWidth: 100,\r\n        wrapText: true,\r\n        autoHeight: true,\r\n        autoHeaderHeight: true,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchJson() {\r\n      let data = [];\r\n      let json;\r\n      await fetch(\"http://212.193.88.196:8080/loaddata\")\r\n        .then((resp) => resp.text())\r\n        .then((razm) => (json = razm));\r\n      \r\n      data = JSON.parse(json);\r\n\r\n      data.forEach((row) => {\r\n        let element = {\r\n          tkey: row.tkey,\r\n          name: row.name,\r\n          infoWorkPlaces: row.infoWorkPlaces,\r\n          stake: row.stake,\r\n          hoursOnStake: row.hoursOnStake,\r\n          hours: row.hours,\r\n          bHoursPlaned: row.bHoursPlaned,\r\n          bHoursReal: row.bHoursReal,\r\n          bHoursDiff: row.bHoursDiff,\r\n          cHoursPlaned: row.cHoursPlaned,\r\n          cHoursReal: row.cHoursReal,\r\n          cHoursDiff: row.cHoursDiff,\r\n          hoursPlaned: row.hoursPlaned,\r\n          hoursReal: row.hoursReal,\r\n          hoursDiff: row.hoursDiff,\r\n          year: row.year,\r\n        };\r\n        this.gridData.push(element);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.reg {\r\n  display: flex;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  font-size: 20px;\r\n}\r\n.table {\r\n  margin: 20px;\r\n  display: flex;\r\n  height: 900px;\r\n  width: 2360px;\r\n}\r\n\r\nheader img {\r\n  height: 100px;\r\n}\r\n\r\nheader {\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: rgb(221, 221, 221);\r\n  flex: 1 100px;\r\n  display: flex;\r\n  flex-flow: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 50px;\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n}\r\n\r\nheader button {\r\n  display: inline-block;\r\n  height: 50px;\r\n  width: 50px;\r\n}\r\n\r\nheader .logotext {\r\n  margin-left: 10px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\nheader .logo {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\nheader .menu {\r\n  height: 49px;\r\n  width: 49px;\r\n}\r\n\r\n.mt-110 {\r\n  margin-top: 110px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;;6DAAlBC,mBAAA,CAAwH,OAAxHC,UAAwH,GAApGC,YAAA,CAA8FC,iBAAA;IAArFC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAAGE,UAAU,EAAED,KAAA,CAAAC,UAAU;IAAGC,aAAa,EAAEF,KAAA,CAAAE;0EAC5FC,mBAAA,wBAAyB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}