{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\ncreateApp(App).mount('#app');\nlet initOptions = {\n  'url': 'https://keys.urfu.ru/auth/',\n  'realm': 'urfu-lk',\n  'clientId': 'rtf-eduload',\n  'public_key': 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB',\n  'token-service': 'https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect',\n  'account-service': 'https://keys.urfu.ru/auth/realms/urfu-lk/account',\n  'tokens-not-before': 0\n  // onLoad: 'login-required'\n};\n\nlet keycloak = Keycloak(initOptions);\nkeycloak.init({\n  onLoad: initOptions.onLoad\n}).then(auth => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    Vue.$log.info(\"Authenticated\");\n    new Vue({\n      el: '#app',\n      render: h => h(App, {\n        props: {\n          keycloak: keycloak\n        }\n      })\n    });\n  }\n\n  //Token Refresh\n  setInterval(() => {\n    keycloak.updateToken(70).then(refreshed => {\n      if (refreshed) {\n        Vue.$log.info('Token refreshed' + refreshed);\n      } else {\n        Vue.$log.warn('Token not refreshed, valid for ' + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n      }\n    }).catch(() => {\n      Vue.$log.error('Failed to refresh token');\n    });\n  }, 6000);\n}).catch(() => {\n  Vue.$log.error(\"Authenticated Failed\");\n});","map":{"version":3,"names":["createApp","App","mount","initOptions","keycloak","Keycloak","init","onLoad","then","auth","window","location","reload","Vue","$log","info","el","render","h","props","setInterval","updateToken","refreshed","warn","Math","round","tokenParsed","exp","timeSkew","Date","getTime","catch","error"],"sources":["D:/Diploma/domains/eduload.vue/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\ncreateApp(App).mount('#app')\r\n\r\n\r\nlet initOptions = { \r\n    'url': 'https://keys.urfu.ru/auth/',\r\n\t'realm': 'urfu-lk',\r\n\t'clientId': 'rtf-eduload',\r\n    'public_key':'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB',\r\n    'token-service':'https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect',\r\n    'account-service':'https://keys.urfu.ru/auth/realms/urfu-lk/account',\r\n    'tokens-not-before': 0\r\n    // onLoad: 'login-required'\r\n  }\r\n  \r\n  let keycloak = Keycloak(initOptions);\r\n  \r\n  keycloak.init({ onLoad: initOptions.onLoad }).then((auth) => {\r\n    if (!auth) {\r\n      window.location.reload();\r\n    } else {\r\n      Vue.$log.info(\"Authenticated\");\r\n  \r\n      new Vue({\r\n        el: '#app',\r\n        render: h => h(App, { props: { keycloak: keycloak } })\r\n      })\r\n    }\r\n  \r\n  \r\n  //Token Refresh\r\n    setInterval(() => {\r\n      keycloak.updateToken(70).then((refreshed) => {\r\n        if (refreshed) {\r\n          Vue.$log.info('Token refreshed' + refreshed);\r\n        } else {\r\n          Vue.$log.warn('Token not refreshed, valid for '\r\n            + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\r\n        }\r\n      }).catch(() => {\r\n        Vue.$log.error('Failed to refresh token');\r\n      });\r\n    }, 6000)\r\n  \r\n  }).catch(() => {\r\n    Vue.$log.error(\"Authenticated Failed\");\r\n  });"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAE3BD,SAAS,CAACC,GAAG,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC;AAG5B,IAAIC,WAAW,GAAG;EACd,KAAK,EAAE,4BAA4B;EACtC,OAAO,EAAE,SAAS;EAClB,UAAU,EAAE,aAAa;EACtB,YAAY,EAAC,0YAA0Y;EACvZ,eAAe,EAAC,kEAAkE;EAClF,iBAAiB,EAAC,kDAAkD;EACpE,mBAAmB,EAAE;EACrB;AACF,CAAC;;AAED,IAAIC,QAAQ,GAAGC,QAAQ,CAACF,WAAW,CAAC;AAEpCC,QAAQ,CAACE,IAAI,CAAC;EAAEC,MAAM,EAAEJ,WAAW,CAACI;AAAO,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;EAC3D,IAAI,CAACA,IAAI,EAAE;IACTC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC,MAAM;IACLC,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,eAAe,CAAC;IAE9B,IAAIF,GAAG,CAAC;MACNG,EAAE,EAAE,MAAM;MACVC,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACjB,GAAG,EAAE;QAAEkB,KAAK,EAAE;UAAEf,QAAQ,EAAEA;QAAS;MAAE,CAAC;IACvD,CAAC,CAAC;EACJ;;EAGF;EACEgB,WAAW,CAAC,MAAM;IAChBhB,QAAQ,CAACiB,WAAW,CAAC,EAAE,CAAC,CAACb,IAAI,CAAEc,SAAS,IAAK;MAC3C,IAAIA,SAAS,EAAE;QACbT,GAAG,CAACC,IAAI,CAACC,IAAI,CAAC,iBAAiB,GAAGO,SAAS,CAAC;MAC9C,CAAC,MAAM;QACLT,GAAG,CAACC,IAAI,CAACS,IAAI,CAAC,iCAAiC,GAC3CC,IAAI,CAACC,KAAK,CAACrB,QAAQ,CAACsB,WAAW,CAACC,GAAG,GAAGvB,QAAQ,CAACwB,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC;MAC1G;IACF,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;MACblB,GAAG,CAACC,IAAI,CAACkB,KAAK,CAAC,yBAAyB,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,IAAI,CAAC;AAEV,CAAC,CAAC,CAACD,KAAK,CAAC,MAAM;EACblB,GAAG,CAACC,IAAI,CAACkB,KAAK,CAAC,sBAAsB,CAAC;AACxC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}