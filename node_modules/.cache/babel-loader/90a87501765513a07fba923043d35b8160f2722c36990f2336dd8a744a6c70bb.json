{"ast":null,"code":"import AGGrid from \"@/components/AGGrid.vue\";\nexport default {\n  mounted() {\n    this.fetchJson();\n  },\n  components: {\n    AGGrid\n  },\n  data() {\n    return {\n      gridData: [],\n      columnDefs: [{\n        headerName: \"Дисциплина\",\n        field: \"disciplineName\",\n        width: 300,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Академическая группа\",\n        field: \"groupsHistory\",\n        width: 160,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Семестр\",\n        field: \"semester\",\n        width: 160,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Вид нагрузки\",\n        field: \"loadType\",\n        width: 180,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Формирующая кафедра\",\n        field: \"formingDivisionuuid\",\n        width: 300,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Читающая кафедра\",\n        field: \"readingDivisionuuid\",\n        width: 300,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Тип нагрузки\",\n        field: \"compensationType\",\n        width: 140,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Планируемое кол-во часов\",\n        field: \"plannedHours\",\n        width: 140\n      }, {\n        headerName: \"Фактическое кол-во часов\",\n        field: \"realHours\",\n        editable: true,\n        width: 140\n      }, {\n        headerName: \"Разница\",\n        field: \"diff\",\n        width: 140\n      }, {\n        headerName: \"Почасовая оплата\",\n        field: \"hoursOnStake\",\n        width: 140\n      }],\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        spanHeaderHeight: true,\n        wrapHeaderText: true,\n        minWidth: 120,\n        wrapText: true,\n        autoHeight: true,\n        autoHeaderHeight: true\n      }\n    };\n  },\n  methods: {\n    async fetchJson() {\n      let json;\n      await fetch(\"http://212.193.88.196:8080/loaddatabytkey?tkey=\" + this.$route.query.tkey).then(resp => resp.text()).then(razm => json = razm);\n      this.gridData = JSON.parse(json);\n    }\n  }\n};","map":{"version":3,"names":["AGGrid","mounted","fetchJson","components","data","gridData","columnDefs","headerName","field","width","filter","floatingFilter","editable","defaultColDef","sortable","resizable","spanHeaderHeight","wrapHeaderText","minWidth","wrapText","autoHeight","autoHeaderHeight","methods","json","fetch","$route","query","tkey","then","resp","text","razm","JSON","parse"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\Filtered.vue"],"sourcesContent":["<template>\r\n  <div class=\"table\" ><AGGrid :gridData=\"gridData\" :columnDefs=\"columnDefs\" :defaultColDef=\"defaultColDef\"></AGGrid></div>\r\n</template>\r\n\r\n<script>\r\nimport AGGrid from \"@/components/AGGrid.vue\";\r\n\r\nexport default {\r\n  mounted() {\r\n    this.fetchJson();\r\n  },\r\n  components: {\r\n    AGGrid,\r\n  },\r\n  data() {\r\n    return {\r\n      gridData: [],\r\n      columnDefs: [\r\n        { headerName: \"Дисциплина\", field: \"disciplineName\", width: 300, filter: true, floatingFilter: true,},\r\n        { headerName: \"Академическая группа\", field: \"groupsHistory\", width: 160, filter: true, floatingFilter: true,},\r\n        { headerName: \"Семестр\", field: \"semester\",  width: 160, filter: true, floatingFilter: true,},\r\n        { headerName: \"Вид нагрузки\", field: \"loadType\", width: 180, filter: true, floatingFilter: true,},\r\n        { headerName: \"Формирующая кафедра\", field: \"formingDivisionuuid\", width: 300, filter: true, floatingFilter: true,},\r\n        { headerName: \"Читающая кафедра\", field: \"readingDivisionuuid\", width: 300, filter: true, floatingFilter: true,},\r\n        { headerName: \"Тип нагрузки\", field: \"compensationType\", width: 140, filter: true, floatingFilter: true,},\r\n        { headerName: \"Планируемое кол-во часов\", field: \"plannedHours\", width: 140},\r\n        { headerName: \"Фактическое кол-во часов\", field: \"realHours\", editable: true, width: 140},\r\n        { headerName: \"Разница\", field: \"diff\", width: 140},\r\n        { headerName: \"Почасовая оплата\", field: \"hoursOnStake\", width: 140},\r\n      ],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        spanHeaderHeight: true,\r\n        wrapHeaderText: true,\r\n        minWidth: 120,\r\n        wrapText: true,\r\n        autoHeight: true,\r\n        autoHeaderHeight: true,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchJson() {\r\n      let json;\r\n      await fetch(\"http://212.193.88.196:8080/loaddatabytkey?tkey=\" + this.$route.query.tkey)\r\n          .then((resp) => resp.text())\r\n          .then((razm) => (json = razm));\r\n      this.gridData = JSON.parse(json);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.reg {\r\n  display: flex;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  font-size: 20px;\r\n}\r\n.table {\r\n  margin: 20px;\r\n  display: flex;\r\n  height: 900px;\r\n  width: 2000px;\r\n}\r\n</style>"],"mappings":"AAKA,OAAOA,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,EAAE;EAClB,CAAC;EACDC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CACV;QAAEC,UAAU,EAAE,YAAY;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EACrG;QAAEJ,UAAU,EAAE,sBAAsB;QAAEC,KAAK,EAAE,eAAe;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EAC9G;QAAEJ,UAAU,EAAE,SAAS;QAAEC,KAAK,EAAE,UAAU;QAAGC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EAC7F;QAAEJ,UAAU,EAAE,cAAc;QAAEC,KAAK,EAAE,UAAU;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EACjG;QAAEJ,UAAU,EAAE,qBAAqB;QAAEC,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EACnH;QAAEJ,UAAU,EAAE,kBAAkB;QAAEC,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EAChH;QAAEJ,UAAU,EAAE,cAAc;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,IAAI;QAAEC,cAAc,EAAE;MAAK,CAAC,EACzG;QAAEJ,UAAU,EAAE,0BAA0B;QAAEC,KAAK,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAG,CAAC,EAC5E;QAAEF,UAAU,EAAE,0BAA0B;QAAEC,KAAK,EAAE,WAAW;QAAEI,QAAQ,EAAE,IAAI;QAAEH,KAAK,EAAE;MAAG,CAAC,EACzF;QAAEF,UAAU,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAG,CAAC,EACnD;QAAEF,UAAU,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAG,CAAC,CACrE;MACDI,aAAa,EAAE;QACbC,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE,IAAI;QACfC,gBAAgB,EAAE,IAAI;QACtBC,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,IAAI;QAChBC,gBAAgB,EAAE;MACpB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMpB,SAASA,CAAA,EAAG;MAChB,IAAIqB,IAAI;MACR,MAAMC,KAAK,CAAC,iDAAgD,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EACjFC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,EAC1BF,IAAI,CAAEG,IAAI,IAAMR,IAAG,GAAIQ,IAAK,CAAC;MAClC,IAAI,CAAC1B,QAAO,GAAI2B,IAAI,CAACC,KAAK,CAACV,IAAI,CAAC;IAClC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}