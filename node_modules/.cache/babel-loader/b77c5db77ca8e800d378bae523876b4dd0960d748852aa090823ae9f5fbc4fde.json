{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-21a1d3b8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"checked\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    type: \"checkbox\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.checkedHandler($event)),\n    checked: _ctx.params.value\n  }, null, 8 /* PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","type","onClick","_cache","$event","$setup","checkedHandler","checked","_ctx","params","value"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\components\\checkboxCellRenderer.vue"],"sourcesContent":["<template>\r\n  <input\r\n      type=\"checkbox\"\r\n      @click=\"checkedHandler($event)\"\r\n      :checked=\"params.value\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  setup(props) {\r\n    function checkedHandler(event) {\r\n        let checked = event.target.checked;\r\n        let colId = this.params.column.colId;\r\n        this.params.node.setDataValue(colId, checked);\r\n    }\r\n    return {\r\n      checkedHandler\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput {\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\ndiv {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 80px;\r\n  padding: 0;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;;;uBACEA,mBAAA,CAIE;IAHEC,IAAI,EAAC,UAAU;IACdC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAC,cAAc,CAACF,MAAM;IAC5BG,OAAO,EAAEC,IAAA,CAAAC,MAAM,CAACC"},"metadata":{},"sourceType":"module","externalDependencies":[]}