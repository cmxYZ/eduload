{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-dfaff8e0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"reg\",\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"reg\",\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"reg\",\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_4 = {\n  class: \"table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AGGrid = _resolveComponent(\"AGGrid\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    class: \"reg-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args)),\n    style: {\n      \"display\": \"flex\"\n    }\n  }, \"Назад\"), _createElementVNode(\"div\", _hoisted_1, \"Преподаватель: \" + _toDisplayString(this.name) + \", \" + _toDisplayString(this.info) + \", \" + _toDisplayString(this.year), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, \"Кол-во часов на почасовую оплату: \" + _toDisplayString(this.hours), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, \"Часы почасовой оплаты: \" + _toDisplayString(this.hours), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_AGGrid, {\n    gridData: $data.gridData,\n    columnDefs: $data.columnDefs,\n    defaultColDef: $data.defaultColDef,\n    getRowId: _ctx.getRowId,\n    localeText: _ctx.ruLocale\n  }, null, 8 /* PROPS */, [\"gridData\", \"columnDefs\", \"defaultColDef\", \"getRowId\", \"localeText\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementVNode","onClick","_cache","args","$options","goBack","_hoisted_1","_toDisplayString","name","info","year","_hoisted_2","hours","_hoisted_3","_hoisted_4","_createVNode","_component_AGGrid","gridData","$data","columnDefs","defaultColDef","getRowId","_ctx","localeText","ruLocale"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\Filtered.vue"],"sourcesContent":["<template>\r\n  <button class=\"reg-button\" @click=\"goBack\" style=\"display: flex\" >Назад</button>\r\n\r\n  <div class=\"reg\" style=\"display: flex\" >Преподаватель: {{this.name}}, {{this.info}}, {{this.year}}</div>\r\n  <div class=\"reg\" style=\"display: flex\" >Кол-во часов на почасовую оплату: {{this.hours}}</div>\r\n  <div class=\"reg\" style=\"display: flex\" >Часы почасовой оплаты: {{this.hours}}</div>\r\n\r\n  <div class=\"table\" ><AGGrid\r\n      :gridData=\"gridData\"\r\n      :columnDefs=\"columnDefs\"\r\n      :defaultColDef=\"defaultColDef\"\r\n      :getRowId=\"getRowId\"\r\n      :localeText=\"ruLocale\"\r\n\r\n  ></AGGrid></div>\r\n</template>\r\n\r\n<script>\r\nimport AGGrid from \"@/components/AGGrid.vue\";\r\nimport AG_GRID_LOCALE_RU from \"@/components/locale.ru.js\";\r\nimport checkboxCellRenderer from \"@/components/checkboxCellRenderer\";\r\n\r\nexport default {\r\n  props: ['role'],\r\n  mounted() {\r\n    this.fetchJson();\r\n    this.ruLocale = AG_GRID_LOCALE_RU;\r\n    this.name = this.$route.query.name;\r\n    this.info = this.$route.query.info;\r\n    this.year = this.$route.query.year;\r\n    this.hours = this.$route.query.hours;\r\n  },\r\n  components: {\r\n    AGGrid,\r\n    checkboxCellRenderer\r\n  },\r\n  data() {\r\n    return {\r\n      gridData: [],\r\n      columnDefs: [\r\n        { headerName: \"№\", valueGetter: params => {\r\n            return params.node ? params.node.rowIndex + 1 : null;\r\n          }, width: 60, },\r\n        { headerName: \"Дисциплина\", field: \"disciplineName\", width: 300, filter: true, floatingFilter: true,},\r\n        { headerName: \"Академическая группа\", field: \"groupsHistory\", width: 160, filter: true, floatingFilter: true,},\r\n        { headerName: \"Семестр\", field: \"semester\",  width: 160, filter: true, floatingFilter: true,},\r\n        { headerName: \"Вид нагрузки\", field: \"loadType\", width: 195, filter: true, floatingFilter: true,},\r\n        { headerName: \"Формирующая кафедра\", field: \"formingDivisionuuid\", width: 300, filter: true, floatingFilter: true,},\r\n        { headerName: \"Читающая кафедра\", field: \"readingDivisionuuid\", width: 300, filter: true, floatingFilter: true,},\r\n        { headerName: \"Тип нагрузки\", field: \"compensationType\", width: 140, filter: true, floatingFilter: true,},\r\n        { headerName: \"Планируемое кол-во часов\", field: \"plannedHours\", width: 140,},\r\n        { headerName: \"Фактическое кол-во часов\", valueGetter: params => {\r\n            return params.data.realHours;\r\n          },\r\n          valueSetter: params => {\r\n            let new_value = parseFloat(params.newValue).toFixed(2);\r\n            if (isNaN(new_value)) {\r\n              new_value = 0;\r\n            }\r\n            let url = 'http://212.193.88.196:8080/changerealhours?id=' + params.data.id + '&value=' + new_value;\r\n            fetch(url);\r\n            params.data.realHours = new_value;\r\n            params.data.diff = (params.data.plannedHours - params.data.realHours).toFixed(2);\r\n            return true;\r\n          }, editable: this.isEditable(this.role), width: 140,},\r\n        { headerName: \"Разница\", field: \"diff\", width: 100},\r\n        { headerName: \"Почасовая оплата\", field: \"isHour\", width: 120, cellRenderer: \"checkboxCellRenderer\" },\r\n      ],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        spanHeaderHeight: true,\r\n        wrapHeaderText: true,\r\n        minWidth: 50,\r\n        wrapText: true,\r\n        autoHeight: true,\r\n        autoHeaderHeight: true,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    getHours() {\r\n      \r\n    },\r\n    goBack() {\r\n      window.location.href = '/';\r\n    },\r\n    async fetchJson() {\r\n      let json;\r\n      await fetch(\"http://212.193.88.196:8080/loaddatabytkey?tkey=\" + this.$route.query.tkey)\r\n          .then((resp) => resp.text())\r\n          .then((razm) => (json = razm));\r\n      this.gridData = JSON.parse(json);\r\n    },\r\n    isEditable(role) {\r\n      return role == 'admin' || role == 'write';\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.table {\r\n  margin: 20px;\r\n  display: flex;\r\n  height: 830px;\r\n  width: 2180px;\r\n}\r\n</style>"],"mappings":";;;EAGOA,KAAK,EAAC,KAAK;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EACZD,KAAK,EAAC,KAAK;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EACZD,KAAK,EAAC,KAAK;EAACC,KAAqB,EAArB;IAAA;EAAA;;;EAEZD,KAAK,EAAC;AAAO;;;6DANlBE,mBAAA,CAAgF;IAAxEF,KAAK,EAAC,YAAY;IAAEG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;IAAEJ,KAAqB,EAArB;MAAA;IAAA;KAAuB,OAAK,GAEvEC,mBAAA,CAAwG,OAAxGM,UAAwG,EAAhE,iBAAe,GAAAC,gBAAA,MAAOC,IAAI,IAAE,IAAE,GAAAD,gBAAA,MAAOE,IAAI,IAAE,IAAE,GAAAF,gBAAA,MAAOG,IAAI,kBAChGV,mBAAA,CAA8F,OAA9FW,UAA8F,EAAtD,oCAAkC,GAAAJ,gBAAA,MAAOK,KAAK,kBACtFZ,mBAAA,CAAmF,OAAnFa,UAAmF,EAA3C,yBAAuB,GAAAN,gBAAA,MAAOK,KAAK,kBAE3EZ,mBAAA,CAOgB,OAPhBc,UAOgB,GAPIC,YAAA,CAOVC,iBAAA;IANLC,QAAQ,EAAEC,KAAA,CAAAD,QAAQ;IAClBE,UAAU,EAAED,KAAA,CAAAC,UAAU;IACtBC,aAAa,EAAEF,KAAA,CAAAE,aAAa;IAC5BC,QAAQ,EAAEC,IAAA,CAAAD,QAAQ;IAClBE,UAAU,EAAED,IAAA,CAAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}