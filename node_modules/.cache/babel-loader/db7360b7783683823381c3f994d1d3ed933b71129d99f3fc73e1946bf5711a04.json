{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"height\": \"100%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ag_grid_vue, {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    class: \"ag-theme-alpine\",\n    columnDefs: $setup.columnDefs,\n    onGridReady: $setup.onGridReady,\n    defaultColDef: $setup.defaultColDef,\n    rowData: $setup.rowData\n  }, null, 8 /* PROPS */, [\"columnDefs\", \"onGridReady\", \"defaultColDef\", \"rowData\"])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createVNode","_component_ag_grid_vue","class","columnDefs","$setup","onGridReady","defaultColDef","rowData"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\components\\AGGrid.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100%\">\r\n    <ag-grid-vue\r\n\r\n        style=\"width: 100%; height: 100%;\"\r\n        class=\"ag-theme-alpine\"\r\n        :columnDefs=\"columnDefs\"\r\n        @grid-ready=\"onGridReady\"\r\n        :defaultColDef=\"defaultColDef\"\r\n        :rowData=\"rowData\"></ag-grid-vue>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { AgGridVue } from \"ag-grid-vue3\";  // the AG Grid Vue Component\r\nimport { reactive, onMounted, ref } from \"vue\";\r\n\r\nimport \"ag-grid-community/styles/ag-grid.css\"; // Core grid CSS, always needed\r\nimport \"ag-grid-community/styles/ag-theme-alpine.css\"; // Optional theme CSS\r\n\r\nexport default {\r\n  name: \"App\",\r\n  components: {\r\n    'ag-grid-vue': AgGridVue,\r\n  },\r\n  setup() {\r\n    const gridApi = ref(null); // Optional - for accessing Grid's API\r\n\r\n    // Obtain API from grid's onGridReady event\r\n    const onGridReady = (params) => {\r\n      gridApi.value = params.api;\r\n    };\r\n\r\n    const rowData = reactive({}); // Set rowData to Array of Objects, one Object per Row\r\n\r\n    // Each Column Definition results in one Column.\r\n    const columnDefs = reactive({\r\n      value: [\r\n        { field: \"make\" },\r\n        { field: \"model\" },\r\n        { field: \"price\" }\r\n      ],\r\n    });\r\n\r\n    // DefaultColDef sets props common to all Columns\r\n    const defaultColDef = {\r\n      sortable: true,\r\n      filter: true,\r\n      flex: 1\r\n    };\r\n\r\n    // Example load data from server\r\n    onMounted(() => {\r\n      fetch(\"https://www.ag-grid.com/example-assets/row-data.json\")\r\n          .then((result) => result.json())\r\n          .then((remoteRowData) => (rowData.value = remoteRowData));\r\n    });\r\n\r\n    return {\r\n      onGridReady,\r\n      columnDefs,\r\n      rowData,\r\n      defaultColDef,\r\n      cellWasClicked: (event) => { // Example of consuming Grid Event\r\n        console.log(\"cell was clicked\", event);\r\n      },\r\n      deselectRows: () =>{\r\n        gridApi.value.deselectAll()\r\n      }\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\"></style>"],"mappings":";;EACOA,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;uBAAzBC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOqCC,sBAAA;IALjCJ,KAAkC,EAAlC;MAAA;MAAA;IAAA,CAAkC;IAClCK,KAAK,EAAC,iBAAiB;IACtBC,UAAU,EAAEC,MAAA,CAAAD,UAAU;IACtBE,WAAU,EAAED,MAAA,CAAAC,WAAW;IACvBC,aAAa,EAAEF,MAAA,CAAAE,aAAa;IAC5BC,OAAO,EAAEH,MAAA,CAAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}