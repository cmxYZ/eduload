{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from \"@/components/Header.vue\";\nimport Grid from \"@/components/Grid.vue\";\nimport Keycloak from \"keycloak-js\";\nconst keycloak = new Keycloak({\n  url: \"https://keys.urfu.ru/auth/\",\n  realm: \"urfu-lk\",\n  clientId: \"rtf-eduload\",\n  public_key: \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\n  \"token-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\n  \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\n  \"tokens-not-before\": 0\n});\nexport default {\n  mounted() {\n    this.fetchJson();\n    this.updateKC();\n  },\n  components: {\n    Header,\n    Grid\n  },\n  data() {\n    return {\n      name: \"\",\n      isAuth: false,\n      gridColumns: [\"ФИО\", \"Место работы/Должность\", \"Ставка\", \"Часы на ставку\", \"Кол-во часов на часовую оплату\", \"Планируемое кол-во часов (БЮДЖЕТ)\", \"Фактическое кол-во часов (БЮДЖЕТ)\", \"Разница (БЮДЖЕТ)\", \"Планируемое кол-во часов (КОНТРАКТ)\", \"Фактическое кол-во часов (КОНТРАКТ)\", \"Разница (КОНТРАКТ)\", \"Планируемое кол-во часов (ОБЩЕЕ)\", \"Фактическое кол-во часов (ОБЩЕЕ)\", \"Разница (ОБЩЕЕ)\", \"Год\"],\n      gridData: []\n    };\n  },\n  methods: {\n    async updateKC() {\n      await keycloak.init({\n        onLoad: \"check-sso\"\n      });\n      if (!keycloak.authenticated) {\n        this.name = keycloak.tokenParsed.user.person.title;\n        this.isAuth = true;\n      }\n    },\n    async login() {\n      if (!keycloak.authenticated) {\n        await keycloak.login();\n        this.name = keycloak.tokenParsed.user.person.title;\n        this.isAuth = true;\n      } else {\n        this.name = keycloak.tokenParsed.user.person.title;\n        this.isAuth = true;\n      }\n    },\n    async fetchJson() {\n      let data = [];\n      let json;\n      await fetch(\"http://212.193.88.196:8080/loaddata\").then(resp => resp.text()).then(razm => json = razm);\n      data = JSON.parse(json);\n      console.log(data);\n      data.forEach(row => {\n        let element = {\n          ФИО: row.name,\n          \"Место работы/Должность\": row.infoWorkPlaces,\n          Ставка: row.stake,\n          \"Часы на ставку\": row.hoursOnStake,\n          \"Кол-во часов на часовую оплату\": row.hours,\n          \"Планируемое кол-во часов (БЮДЖЕТ)\": row.bHoursPlaned,\n          \"Фактическое кол-во часов (БЮДЖЕТ)\": row.bHoursReal,\n          \"Разница (БЮДЖЕТ)\": row.bHoursDiff,\n          \"Планируемое кол-во часов (КОНТРАКТ)\": row.cHoursPlaned,\n          \"Фактическое кол-во часов (КОНТРАКТ)\": row.cHoursReal,\n          \"Разница (КОНТРАКТ)\": row.cHoursDiff,\n          \"Планируемое кол-во часов (ОБЩЕЕ)\": row.hoursPlaned,\n          \"Фактическое кол-во часов (ОБЩЕЕ)\": row.hoursReal,\n          \"Разница (ОБЩЕЕ)\": row.hoursDiff,\n          Год: row.year\n        };\n        this.gridData.push(element);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","Grid","Keycloak","keycloak","url","realm","clientId","public_key","mounted","fetchJson","updateKC","components","data","name","isAuth","gridColumns","gridData","methods","init","onLoad","authenticated","tokenParsed","user","person","title","login","json","fetch","then","resp","text","razm","JSON","parse","console","log","forEach","row","element","ФИО","infoWorkPlaces","Ставка","stake","hoursOnStake","hours","bHoursPlaned","bHoursReal","bHoursDiff","cHoursPlaned","cHoursReal","cHoursDiff","hoursPlaned","hoursReal","hoursDiff","Год","year","push"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app\">\r\n    <Header></Header>\r\n    <span class=\"reg\" v-if=\"this.isAuth\">{{ name }}</span>\r\n    <button class=\"reg\" @click=\"login\" v-if=\"!this.isAuth\">Войти</button>\r\n    <Grid :data=\"gridData\" :columns=\"gridColumns\"></Grid>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/Header.vue\";\r\nimport Grid from \"@/components/Grid.vue\";\r\nimport Keycloak from \"keycloak-js\";\r\n\r\nconst keycloak = new Keycloak({\r\n  url: \"https://keys.urfu.ru/auth/\",\r\n  realm: \"urfu-lk\",\r\n  clientId: \"rtf-eduload\",\r\n  public_key:\r\n    \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\r\n  \"token-service\":\r\n    \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\r\n  \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\r\n  \"tokens-not-before\": 0,\r\n});\r\n\r\n\r\n\r\nexport default {\r\n  mounted() {\r\n    this.fetchJson();\r\n    this.updateKC();\r\n  },\r\n  components: {\r\n    Header,\r\n    Grid,\r\n  },\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      isAuth: false,\r\n      gridColumns: [\r\n        \"ФИО\",\r\n        \"Место работы/Должность\",\r\n        \"Ставка\",\r\n        \"Часы на ставку\",\r\n        \"Кол-во часов на часовую оплату\",\r\n        \"Планируемое кол-во часов (БЮДЖЕТ)\",\r\n        \"Фактическое кол-во часов (БЮДЖЕТ)\",\r\n        \"Разница (БЮДЖЕТ)\",\r\n        \"Планируемое кол-во часов (КОНТРАКТ)\",\r\n        \"Фактическое кол-во часов (КОНТРАКТ)\",\r\n        \"Разница (КОНТРАКТ)\",\r\n        \"Планируемое кол-во часов (ОБЩЕЕ)\",\r\n        \"Фактическое кол-во часов (ОБЩЕЕ)\",\r\n        \"Разница (ОБЩЕЕ)\",\r\n        \"Год\",\r\n      ],\r\n      gridData: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async updateKC()\r\n    {\r\n      await keycloak.init({\r\n      onLoad: \"check-sso\",\r\n    });\r\n    if (!keycloak.authenticated) {\r\n        this.name = keycloak.tokenParsed.user.person.title;\r\n        this.isAuth = true;\r\n      }\r\n    },\r\n    async login() {\r\n      if (!keycloak.authenticated) {\r\n        await keycloak.login();\r\n        this.name = keycloak.tokenParsed.user.person.title;\r\n        this.isAuth = true;\r\n      } else {\r\n        this.name = keycloak.tokenParsed.user.person.title;\r\n        this.isAuth = true;\r\n      }\r\n    },\r\n    async fetchJson() {\r\n      let data = [];\r\n      let json;\r\n      await fetch(\"http://212.193.88.196:8080/loaddata\")\r\n        .then((resp) => resp.text())\r\n        .then((razm) => (json = razm));\r\n      \r\n      data = JSON.parse(json);\r\n      console.log(data);\r\n\r\n      data.forEach((row) => {\r\n        let element = {\r\n          ФИО: row.name,\r\n          \"Место работы/Должность\": row.infoWorkPlaces,\r\n          Ставка: row.stake,\r\n          \"Часы на ставку\": row.hoursOnStake,\r\n          \"Кол-во часов на часовую оплату\": row.hours,\r\n          \"Планируемое кол-во часов (БЮДЖЕТ)\": row.bHoursPlaned,\r\n          \"Фактическое кол-во часов (БЮДЖЕТ)\": row.bHoursReal,\r\n          \"Разница (БЮДЖЕТ)\": row.bHoursDiff,\r\n          \"Планируемое кол-во часов (КОНТРАКТ)\": row.cHoursPlaned,\r\n          \"Фактическое кол-во часов (КОНТРАКТ)\": row.cHoursReal,\r\n          \"Разница (КОНТРАКТ)\": row.cHoursDiff,\r\n          \"Планируемое кол-во часов (ОБЩЕЕ)\": row.hoursPlaned,\r\n          \"Фактическое кол-во часов (ОБЩЕЕ)\": row.hoursReal,\r\n          \"Разница (ОБЩЕЕ)\": row.hoursDiff,\r\n          Год: row.year,\r\n        };\r\n        this.gridData.push(element);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.reg {\r\n  display: flex;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  font-size: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}