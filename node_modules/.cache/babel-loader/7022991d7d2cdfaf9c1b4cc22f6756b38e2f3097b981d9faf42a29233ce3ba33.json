{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AGGrid from \"@/components/AGGrid.vue\";\nimport { useRoute } from 'vue-router';\nexport default {\n  mounted() {\n    this.fetchJson();\n  },\n  components: {\n    AGGrid\n  },\n  data() {\n    return {\n      tkey: '',\n      gridData: [],\n      columnDefs: [{\n        headerName: \"Дисциплина\",\n        field: \"disciplineName\",\n        width: 280,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Академическая группа\",\n        field: \"groupsHistory\",\n        width: 280,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Семестр\",\n        field: \"semester\",\n        width: 115,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Вид нагрузки\",\n        field: \"loadType\",\n        width: 140,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Формирующая кафедра\",\n        field: \"formingDivisionuuid\",\n        width: 140,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Читающая кафедра\",\n        field: \"readingDivisionuuid\",\n        width: 140,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Тип нагрузки\",\n        field: \"compensationType\",\n        width: 140,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Планируемое кол-во часов\",\n        field: \"plannedHours\",\n        width: 140\n      }, {\n        headerName: \"Фактическое кол-во часов\",\n        field: \"realHours\",\n        editable: true,\n        width: 140\n      }, {\n        headerName: \"Разница\",\n        field: \"diff\",\n        width: 140\n      }, {\n        headerName: \"Почасовая оплата\",\n        field: \"hoursOnStake\",\n        width: 140\n      }],\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        spanHeaderHeight: true,\n        wrapHeaderText: true,\n        minWidth: 120,\n        wrapText: true,\n        autoHeight: true,\n        autoHeaderHeight: true\n      }\n    };\n  },\n  methods: {\n    async fetchJson() {\n      let data = [];\n      let json;\n      await fetch(\"http://212.193.88.196:8080/loaddata?tkey=\" + this.$route.query.tkey).then(resp => resp.text()).then(razm => json = razm);\n      data = JSON.parse(json);\n      data.forEach(row => {\n        let element = {\n          tkey: row.tkey,\n          name: row.name,\n          infoWorkPlaces: row.infoWorkPlaces,\n          stake: row.stake,\n          hoursOnStake: row.hoursOnStake,\n          hours: row.hours,\n          bHoursPlaned: row.bHoursPlaned,\n          bHoursReal: row.bHoursReal,\n          bHoursDiff: row.bHoursDiff,\n          cHoursPlaned: row.cHoursPlaned,\n          cHoursReal: row.cHoursReal,\n          cHoursDiff: row.cHoursDiff,\n          hoursPlaned: row.hoursPlaned,\n          hoursReal: row.hoursReal,\n          hoursDiff: row.hoursDiff,\n          year: row.year\n        };\n        this.gridData.push(element);\n      });\n    }\n  }\n};","map":{"version":3,"names":["AGGrid","useRoute","mounted","fetchJson","components","data","tkey","gridData","columnDefs","headerName","field","width","filter","floatingFilter","editable","defaultColDef","sortable","resizable","spanHeaderHeight","wrapHeaderText","minWidth","wrapText","autoHeight","autoHeaderHeight","methods","json","fetch","$route","query","then","resp","text","razm","JSON","parse","forEach","row","element","name","infoWorkPlaces","stake","hoursOnStake","hours","bHoursPlaned","bHoursReal","bHoursDiff","cHoursPlaned","cHoursReal","cHoursDiff","hoursPlaned","hoursReal","hoursDiff","year","push"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\Filtered.vue"],"sourcesContent":["<template>\r\n  <div class=\"table\" ><AGGrid :gridData=\"gridData\" :columnDefs=\"columnDefs\" :defaultColDef=\"defaultColDef\"></AGGrid></div>\r\n</template>\r\n\r\n<script>\r\nimport AGGrid from \"@/components/AGGrid.vue\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  mounted() {\r\n    this.fetchJson();\r\n  },\r\n  components: {\r\n    AGGrid,\r\n  },\r\n  data() {\r\n    return {\r\n      tkey: '',\r\n      gridData: [],\r\n      columnDefs: [\r\n        { headerName: \"Дисциплина\", field: \"disciplineName\", width: 280, filter: true, floatingFilter: true,},\r\n        { headerName: \"Академическая группа\", field: \"groupsHistory\", width: 280, filter: true, floatingFilter: true,},\r\n        { headerName: \"Семестр\", field: \"semester\",  width: 115, filter: true, floatingFilter: true,},\r\n        { headerName: \"Вид нагрузки\", field: \"loadType\", width: 140, filter: true, floatingFilter: true,},\r\n        { headerName: \"Формирующая кафедра\", field: \"formingDivisionuuid\", width: 140, filter: true, floatingFilter: true,},\r\n        { headerName: \"Читающая кафедра\", field: \"readingDivisionuuid\", width: 140, filter: true, floatingFilter: true,},\r\n        { headerName: \"Тип нагрузки\", field: \"compensationType\", width: 140, filter: true, floatingFilter: true,},\r\n        { headerName: \"Планируемое кол-во часов\", field: \"plannedHours\", width: 140},\r\n        { headerName: \"Фактическое кол-во часов\", field: \"realHours\", editable: true, width: 140},\r\n        { headerName: \"Разница\", field: \"diff\", width: 140},\r\n        { headerName: \"Почасовая оплата\", field: \"hoursOnStake\", width: 140},\r\n      ],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        spanHeaderHeight: true,\r\n        wrapHeaderText: true,\r\n        minWidth: 120,\r\n        wrapText: true,\r\n        autoHeight: true,\r\n        autoHeaderHeight: true,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchJson() {\r\n      let data = [];\r\n      let json;\r\n      await fetch(\"http://212.193.88.196:8080/loaddata?tkey=\" + this.$route.query.tkey)\r\n          .then((resp) => resp.text())\r\n          .then((razm) => (json = razm));\r\n\r\n      data = JSON.parse(json);\r\n\r\n      data.forEach((row) => {\r\n        let element = {\r\n          tkey: row.tkey,\r\n          name: row.name,\r\n          infoWorkPlaces: row.infoWorkPlaces,\r\n          stake: row.stake,\r\n          hoursOnStake: row.hoursOnStake,\r\n          hours: row.hours,\r\n          bHoursPlaned: row.bHoursPlaned,\r\n          bHoursReal: row.bHoursReal,\r\n          bHoursDiff: row.bHoursDiff,\r\n          cHoursPlaned: row.cHoursPlaned,\r\n          cHoursReal: row.cHoursReal,\r\n          cHoursDiff: row.cHoursDiff,\r\n          hoursPlaned: row.hoursPlaned,\r\n          hoursReal: row.hoursReal,\r\n          hoursDiff: row.hoursDiff,\r\n          year: row.year,\r\n        };\r\n        this.gridData.push(element);\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.reg {\r\n  display: flex;\r\n  margin-top: 15px;\r\n  margin-left: 15px;\r\n  font-size: 20px;\r\n}\r\n.table {\r\n  margin: 20px;\r\n  display: flex;\r\n  height: 900px;\r\n  width: 1820px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}