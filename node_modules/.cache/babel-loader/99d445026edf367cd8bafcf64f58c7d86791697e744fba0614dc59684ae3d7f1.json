{"ast":null,"code":"import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport Vue from \"vue\";\nimport Keycloak from 'keycloak-js';\nconst keycloak = Keycloak({\n  \"url\": \"https://keys.urfu.ru/auth/\",\n  \"realm\": \"urfu-lk\",\n  \"clientId\": \"rtf-eduload\",\n  \"public_key\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\n  \"token-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\n  \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\n  \"tokens-not-before\": 0\n});\nkeycloak.init({\n  onLoad: 'check-sso'\n});\ncreateApp(App).mount(\"#app\");\n\n// let initOptions = {\n//   \"url\": \"https://keys.urfu.ru/auth/\",\n//   \"realm\": \"urfu-lk\",\n//   \"clientId\": \"rtf-eduload\",\n//   \"public_key\":\n//     \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\n//   \"token-service\":\n//     \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\n//   \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\n//   \"tokens-not-before\": 0,\n//   \"onLoad\": \"check-sso\"\n// };\n\n// let keycloak = Keycloak(initOptions);\n\n// keycloak.init({ onLoad: initOptions.onLoad }).then((auth) => {\n//   if (!auth) {\n//     window.location.reload();\n//   } \n//   new Vue({\n//     el: '#app',\n//     render: h => h(App, { props: { keycloak: keycloak } })\n//   })\n\n// // //Token Refresh\n// //   setInterval(() => {\n// //     keycloak.updateToken(70).then((refreshed) => {\n// //       if (refreshed) {\n// //         Vue.$log.info('Token refreshed' + refreshed);\n// //       } else {\n// //         Vue.$log.warn('Token not refreshed, valid for '\n// //           + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\n// //       }\n// //     }).catch(() => {\n// //       Vue.$log.error('Failed to refresh token');\n// //     });\n// //   }, 6000)\n\n// }).catch(() => {});","map":{"version":3,"names":["createApp","App","Vue","Keycloak","keycloak","init","onLoad","mount"],"sources":["D:/Diploma/domains/eduload.vue/src/main.js"],"sourcesContent":["import { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport Vue from \"vue\";\r\nimport Keycloak from 'keycloak-js';\r\n\r\n\r\n\r\nconst keycloak = Keycloak({\r\n  \"url\": \"https://keys.urfu.ru/auth/\",\r\n  \"realm\": \"urfu-lk\",\r\n  \"clientId\": \"rtf-eduload\",\r\n  \"public_key\":\r\n    \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\r\n  \"token-service\":\r\n    \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\r\n  \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\r\n  \"tokens-not-before\": 0\r\n});\r\n\r\nkeycloak.init({\r\n  onLoad: 'check-sso'\r\n})\r\n\r\ncreateApp(App).mount(\"#app\");\r\n\r\n\r\n// let initOptions = {\r\n//   \"url\": \"https://keys.urfu.ru/auth/\",\r\n//   \"realm\": \"urfu-lk\",\r\n//   \"clientId\": \"rtf-eduload\",\r\n//   \"public_key\":\r\n//     \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt201JHU3XjmpVTbO8uZsG/nq39zPhd9rQX9fiPJtcjUWl+elVOy6IaMPs2wfsUQkU1SnUKWGYLdO+YEg4zk0z0nTpzaBubYgPlZ5MzERPPNlbaPQxv/kbojiYQr5CrZF4TUrALZ0qHzYpx346wNJiQ3cHVHNbY8VI2+bsKQoBslNfUlQhxdjgH9H8523rM8PRXUB4MrzV/kfuPrDXce7W6GlS8lN5QT/hxlfTJb3lXSRH8yuDTH8LPxQKVtnw9qgc0QIwi7lAIVcaY5s4ixKPd6jL5LRGEjot6yRSb4WEUM1DYcwIMgMBPK1WWCqDuWQYcjwM9VMhomJc4Zx9V/snQIDAQAB\",\r\n//   \"token-service\":\r\n//     \"https://keys.urfu.ru/auth/realms/urfu-lk/protocol/openid-connect\",\r\n//   \"account-service\": \"https://keys.urfu.ru/auth/realms/urfu-lk/account\",\r\n//   \"tokens-not-before\": 0,\r\n//   \"onLoad\": \"check-sso\"\r\n// };\r\n\r\n// let keycloak = Keycloak(initOptions);\r\n\r\n// keycloak.init({ onLoad: initOptions.onLoad }).then((auth) => {\r\n//   if (!auth) {\r\n//     window.location.reload();\r\n//   } \r\n//   new Vue({\r\n//     el: '#app',\r\n//     render: h => h(App, { props: { keycloak: keycloak } })\r\n//   })\r\n\r\n// // //Token Refresh\r\n// //   setInterval(() => {\r\n// //     keycloak.updateToken(70).then((refreshed) => {\r\n// //       if (refreshed) {\r\n// //         Vue.$log.info('Token refreshed' + refreshed);\r\n// //       } else {\r\n// //         Vue.$log.warn('Token not refreshed, valid for '\r\n// //           + Math.round(keycloak.tokenParsed.exp + keycloak.timeSkew - new Date().getTime() / 1000) + ' seconds');\r\n// //       }\r\n// //     }).catch(() => {\r\n// //       Vue.$log.error('Failed to refresh token');\r\n// //     });\r\n// //   }, 6000)\r\n\r\n// }).catch(() => {});"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,QAAQ,MAAM,aAAa;AAIlC,MAAMC,QAAQ,GAAGD,QAAQ,CAAC;EACxB,KAAK,EAAE,4BAA4B;EACnC,OAAO,EAAE,SAAS;EAClB,UAAU,EAAE,aAAa;EACzB,YAAY,EACV,0YAA0Y;EAC5Y,eAAe,EACb,kEAAkE;EACpE,iBAAiB,EAAE,kDAAkD;EACrE,mBAAmB,EAAE;AACvB,CAAC,CAAC;AAEFC,QAAQ,CAACC,IAAI,CAAC;EACZC,MAAM,EAAE;AACV,CAAC,CAAC;AAEFN,SAAS,CAACC,GAAG,CAAC,CAACM,KAAK,CAAC,MAAM,CAAC;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}