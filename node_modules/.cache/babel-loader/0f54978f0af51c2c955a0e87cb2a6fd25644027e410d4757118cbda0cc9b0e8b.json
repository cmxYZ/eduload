{"ast":null,"code":"import AGGrid from \"@/components/AGGrid.vue\";\nimport infoCellRenderer from \"@/components/infoCellRenderer\";\nimport AG_GRID_LOCALE_RU from \"@/components/locale.ru.js\";\nexport default {\n  props: ['role', 'accountName'],\n  beforeMount() {\n    this.fetchJson();\n    this.ruLocale = AG_GRID_LOCALE_RU;\n  },\n  components: {\n    AGGrid,\n    infoCellRenderer\n  },\n  data() {\n    return {\n      isLoading: true,\n      gridData: [],\n      columnDefs: [{\n        headerName: \"\",\n        field: \"tkey\",\n        cellRenderer: \"infoCellRenderer\",\n        width: 50\n      }, {\n        headerName: \"№\",\n        valueGetter: params => {\n          return params.node ? params.node.rowIndex + 1 : null;\n        },\n        width: 55\n      }, {\n        headerName: \"ФИО\",\n        field: \"name\",\n        width: 255,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Должность/Место работы\",\n        field: \"infoWorkPlaces\",\n        width: 260,\n        filter: true,\n        floatingFilter: true\n      }, {\n        headerName: \"Ставка\",\n        valueGetter: params => {\n          if (params.data.stake == '' || params.data.stake == null) {\n            return '0';\n          }\n          return params.data.stake;\n        },\n        valueSetter: params => {\n          let new_value = parseFloat(params.newValue).toFixed(2);\n          if (isNaN(new_value)) {\n            new_value = 0;\n          }\n          let url = 'http://212.193.88.196:8080/changestake?tkey=' + params.data.tkey + '&value=' + new_value + '&year=' + params.data.year + '&user=' + this.accountName;\n          fetch(url);\n          params.data.stake = new_value;\n          return true;\n        },\n        editable: this.isEditable(this.role),\n        width: 70\n      }, {\n        headerName: \"Часы на ставку\",\n        valueGetter: params => {\n          return params.data.hoursOnStake;\n        },\n        valueSetter: params => {\n          let new_value = parseFloat(params.newValue).toFixed(2);\n          if (isNaN(new_value)) {\n            new_value = 0;\n          }\n          let url = 'http://212.193.88.196:8080/changehours?guidPerson1C=' + params.data.guidPerson1C + '&value=' + new_value + '&user=' + this.accountName;\n          fetch(url);\n          params.data.hoursOnStake = new_value;\n          params.data.hours = (params.data.bHoursPlaned - params.data.hoursOnStake).toFixed(2);\n          return true;\n        },\n        editable: this.isEditable(this.role),\n        width: 80\n      }, {\n        headerName: \"Кол-во часов на почасовую оплату\",\n        valueGetter: params => {\n          return params.data.hours;\n        },\n        valueSetter: params => {\n          let new_value = parseFloat(params.newValue).toFixed(2);\n          params.data.hours = new_value;\n          return true;\n        },\n        width: 100\n      }, {\n        headerName: 'Бюджет',\n        children: [{\n          headerName: \"Планируемое кол-во часов\",\n          field: \"bHoursPlaned\",\n          width: 110\n        }, {\n          headerName: \"Фактическое кол-во часов\",\n          field: \"bHoursReal\",\n          width: 110\n        }, {\n          headerName: \"Разница\",\n          field: \"bHoursDiff\",\n          width: 80\n        }]\n      }, {\n        headerName: 'Контракт',\n        children: [{\n          headerName: \"Планируемое кол-во часов\",\n          field: \"cHoursPlaned\",\n          width: 110\n        }, {\n          headerName: \"Фактическое кол-во часов\",\n          field: \"cHoursReal\",\n          width: 110\n        }, {\n          headerName: \"Разница\",\n          field: \"cHoursDiff\",\n          width: 80\n        }]\n      }, {\n        headerName: 'Общее',\n        children: [{\n          headerName: \"Планируемое кол-во часов\",\n          field: \"hoursPlaned\",\n          width: 110\n        }, {\n          headerName: \"Фактическое кол-во часов\",\n          field: \"hoursReal\",\n          width: 110\n        }, {\n          headerName: \"Разница\",\n          field: \"hoursDiff\",\n          width: 80\n        }]\n      }, {\n        headerName: \"Год\",\n        field: \"year\",\n        width: 110,\n        filter: true,\n        floatingFilter: true\n      }],\n      defaultColDef: {\n        sortable: true,\n        resizable: true,\n        spanHeaderHeight: true,\n        wrapHeaderText: true,\n        minWidth: 50,\n        wrapText: true,\n        autoHeight: true,\n        autoHeaderHeight: true\n      }\n    };\n  },\n  methods: {\n    loadExcel() {\n      window.open(\"http://212.193.88.196:8080/loadexcel?user=\" + this.accountName, \"_blank\");\n    },\n    async fetchJson() {\n      let json;\n      let url = \"http://212.193.88.196:8080/loaddata\";\n      if (this.role == 'teacher') {\n        url = \"http://212.193.88.196:8080/loaddata?accountName=\" + this.accountName;\n      }\n      await fetch(url).then(resp => resp.text()).then(razm => json = razm);\n      if (json != 'No data') {\n        this.gridData = await JSON.parse(json);\n      }\n      this.isLoading = false;\n    },\n    isEditable(role) {\n      return role == 'admin' || role == 'write';\n    }\n  }\n};","map":{"version":3,"names":["AGGrid","infoCellRenderer","AG_GRID_LOCALE_RU","props","beforeMount","fetchJson","ruLocale","components","data","isLoading","gridData","columnDefs","headerName","field","cellRenderer","width","valueGetter","params","node","rowIndex","filter","floatingFilter","stake","valueSetter","new_value","parseFloat","newValue","toFixed","isNaN","url","tkey","year","accountName","fetch","editable","isEditable","role","hoursOnStake","guidPerson1C","hours","bHoursPlaned","children","defaultColDef","sortable","resizable","spanHeaderHeight","wrapHeaderText","minWidth","wrapText","autoHeight","autoHeaderHeight","methods","loadExcel","window","open","json","then","resp","text","razm","JSON","parse"],"sources":["D:\\Diploma\\domains\\eduload.vue\\src\\Home.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: flex\" class=\"reg\" v-if=\"isLoading\">Загрузка таблицы...</div>\r\n  <button class=\"reg-button\" @click=\"loadExcel\">Экспорт в Excel</button>\r\n  <div class=\"table\" ><AGGrid\r\n      :gridData=\"gridData\"\r\n      :columnDefs=\"columnDefs\"\r\n      :defaultColDef=\"defaultColDef\"\r\n      :getRowId=\"getRowId\"\r\n      :localeText=\"ruLocale\"\r\n  ></AGGrid></div>\r\n</template>\r\n\r\n<script>\r\nimport AGGrid from \"@/components/AGGrid.vue\";\r\nimport infoCellRenderer from \"@/components/infoCellRenderer\";\r\nimport AG_GRID_LOCALE_RU from \"@/components/locale.ru.js\";\r\n\r\nexport default {\r\n  props: ['role', 'accountName'],\r\n  beforeMount() {\r\n    this.fetchJson();\r\n    this.ruLocale = AG_GRID_LOCALE_RU;\r\n  },\r\n  components: {\r\n    AGGrid,\r\n    infoCellRenderer\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: true,\r\n      gridData: [],\r\n      columnDefs: [\r\n        { headerName: \"\", field: \"tkey\", cellRenderer: \"infoCellRenderer\", width: 50},\r\n        { headerName: \"№\", valueGetter: params => {\r\n            return params.node ? params.node.rowIndex + 1 : null;\r\n          }, width: 55, },\r\n        { headerName: \"ФИО\", field: \"name\", width: 255, filter: true, floatingFilter: true,},\r\n        { headerName: \"Должность/Место работы\", field: \"infoWorkPlaces\", width: 260, filter: true, floatingFilter: true,},\r\n        { headerName: \"Ставка\", valueGetter: params => {\r\n          if (params.data.stake == '' || params.data.stake == null)\r\n          {\r\n            return '0';\r\n          }\r\n          return params.data.stake;\r\n          },\r\n          valueSetter: params => {\r\n            let new_value = parseFloat(params.newValue).toFixed(2);\r\n            if (isNaN(new_value)) {\r\n              new_value = 0;\r\n            }\r\n            let url = 'http://212.193.88.196:8080/changestake?tkey=' + params.data.tkey + '&value=' + new_value + '&year=' + params.data.year + '&user=' + this.accountName;\r\n            fetch(url);\r\n            params.data.stake = new_value;\r\n            return true;\r\n          },  editable: this.isEditable(this.role), width: 70},\r\n        { headerName: \"Часы на ставку\",\r\n          valueGetter: params => {\r\n            return params.data.hoursOnStake;\r\n          },\r\n          valueSetter: params => {\r\n            let new_value = parseFloat(params.newValue).toFixed(2);\r\n            if (isNaN(new_value)) {\r\n              new_value = 0;\r\n            }\r\n            let url = 'http://212.193.88.196:8080/changehours?guidPerson1C=' + params.data.guidPerson1C + '&value=' + new_value + '&user=' + this.accountName;\r\n            fetch(url);\r\n            params.data.hoursOnStake = new_value;\r\n            params.data.hours = (params.data.bHoursPlaned - params.data.hoursOnStake).toFixed(2);\r\n            return true;\r\n          },\r\n          editable: this.isEditable(this.role), width: 80},\r\n        { headerName: \"Кол-во часов на почасовую оплату\",\r\n          valueGetter: params => {\r\n            return params.data.hours;\r\n          },\r\n          valueSetter: params => {\r\n            let new_value = parseFloat(params.newValue).toFixed(2);\r\n            params.data.hours = new_value;\r\n            return true;\r\n          }, width: 100},\r\n        {\r\n          headerName: 'Бюджет',\r\n          children: [\r\n            { headerName: \"Планируемое кол-во часов\", field: \"bHoursPlaned\", width: 110},\r\n            { headerName: \"Фактическое кол-во часов\", field: \"bHoursReal\", width: 110},\r\n            { headerName: \"Разница\", field: \"bHoursDiff\", width: 80},\r\n          ],\r\n        },\r\n        {\r\n          headerName: 'Контракт',\r\n          children: [\r\n            {headerName: \"Планируемое кол-во часов\", field: \"cHoursPlaned\", width: 110},\r\n            {headerName: \"Фактическое кол-во часов\", field: \"cHoursReal\", width: 110},\r\n            {headerName: \"Разница\", field: \"cHoursDiff\", width: 80},\r\n          ],\r\n        },\r\n        {\r\n          headerName: 'Общее',\r\n          children: [\r\n            { headerName: \"Планируемое кол-во часов\", field: \"hoursPlaned\", width: 110 },\r\n            { headerName: \"Фактическое кол-во часов\", field: \"hoursReal\", width: 110 },\r\n            { headerName: \"Разница\", field: \"hoursDiff\", width: 80 },\r\n          ],\r\n        },\r\n        { headerName: \"Год\", field: \"year\", width: 110, filter: true, floatingFilter: true,},\r\n      ],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true,\r\n        spanHeaderHeight: true,\r\n        wrapHeaderText: true,\r\n        minWidth: 50,\r\n        wrapText: true,\r\n        autoHeight: true,\r\n        autoHeaderHeight: true\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    loadExcel() {\r\n      window.open(\"http://212.193.88.196:8080/loadexcel?user=\" + this.accountName, \"_blank\");\r\n    },\r\n    async fetchJson() {\r\n      let json;\r\n      let url = \"http://212.193.88.196:8080/loaddata\";\r\n      if (this.role == 'teacher') {\r\n        url = \"http://212.193.88.196:8080/loaddata?accountName=\" + this.accountName;\r\n      }\r\n      await fetch(url)\r\n        .then((resp) => resp.text())\r\n        .then((razm) => (json = razm));\r\n      if (json != 'No data') {\r\n        this.gridData = await JSON.parse(json);\r\n      }\r\n      this.isLoading = false;\r\n    },\r\n    isEditable(role) {\r\n      return role == 'admin' || role == 'write';\r\n    }\r\n  },\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.table {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  align-content: stretch;\r\n  height: 900px;\r\n  width: 100%;\r\n  max-width: 1905px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}